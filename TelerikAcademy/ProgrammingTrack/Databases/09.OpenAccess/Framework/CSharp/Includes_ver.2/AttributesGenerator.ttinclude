<#+ 
public class AttributesGenerator: TelerikTextTransformationBase
{
	public AttributesGenerator(TextTransformation rootGenerator)
		:base(rootGenerator)
    {
    }

	/// <summary>
	/// Generates a list of attributes.
	/// </summary>
	/// <param name="attributes">The list of attributes.</param>
	public void GenerateAttributes(IEnumerable<Telerik.OpenAccess.CodeGeneration.CodeAttribute> attributes)
	{
		if(attributes == null || attributes.Count() == 0)
		{
			return;
		}
		
		foreach(var attribute in attributes) 
		{
			this.GenerateAttribute(attribute);
		}
	}

	/// <summary>
	/// Generates a TransientAttribute.
	/// </summary>
	public void GenerateTransientAttribute()
	{
#>[Transient()]
<#+
	}

	/// <summary>
	/// Generates an attribute.
	/// </summary>
	/// <param name="attribute">The attribute model.</param>
	public void GenerateAttribute(Telerik.OpenAccess.CodeGeneration.CodeAttribute attribute)
	{
#>
<#= attribute.ToCode() #>
<#+ 
	}
}
#>