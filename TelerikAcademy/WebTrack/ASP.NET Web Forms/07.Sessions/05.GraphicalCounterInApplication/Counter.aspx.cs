using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Imaging;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace _05.GraphicalCounterInApplication
{
    public partial class Counter : System.Web.UI.Page
    {
        // If you want to see the counter increase for every hit on the page, please change the check
        // in page_load from the session object to the page.ispostback. Read more about the firefox bug that made me
        // change the logic in this way below.

        // Warning!!! For some obscure reason, the pageload event is firing twice in Firefox. More about that
        // here: http://stackoverflow.com/questions/2153579/page-load-fires-twice-on-firefox. Despite my efforts (disabling
        // all firefox extensions for example), the event is still firing twice and the img tag that is generated by ASP
        // does not have the common error of missing an img attribute. So, in firefox, every reload of the page causes
        //  the counter used to increase by 2 if I used PostBack to check if the user is new. Therefore I enabled
        // a session variable that checks if the user is already counted. That means that simple reload of the page
        // will not increase the counter. You have to use a different browser or close the current one and open the page 
        // again to increase it. Bear in mind that if you stopped the server, the counter will be reset (I have implemented
        // this functionality via Global.asax Application_Start event.
        protected void Page_Load(object sender, EventArgs e)
        {
            if (Session["Catched"] == null) // (!Page.IsPostBack)
            {
                Session["Catched"] = "catched";
                if (Application["UserCount"] == null)
                {
                    Application["UserCount"] = 1;
                }
                else
                {
                    Application["UserCount"] = (int)Application["UserCount"] + 1;
                }
            }

            Response.Clear();

            GetImage();
        }

        private void GetImage()
        {
            Bitmap generatedImage = new Bitmap(200, 200);
            using (generatedImage)
            {
                Graphics gr = Graphics.FromImage(generatedImage);
                using (gr)
                {
                    gr.FillRectangle(Brushes.MediumSeaGreen, 0, 0, 200, 200);
                    gr.DrawString("Number of users: " + (int)Application["UserCount"],
                        new Font("Arial", 14, FontStyle.Regular), SystemBrushes.WindowText, new PointF(10, 40));

                    Response.ContentType = "image/gif";


                    generatedImage.Save(Response.OutputStream, ImageFormat.Gif);
                }
            }
        }
    }
}